$date
	Fri Apr 29 17:53:29 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module psdsqrt_tb $end
$var wire 16 ! sqrt [15:0] $end
$var reg 1 " clock $end
$var reg 1 # reset $end
$var reg 1 $ start $end
$var reg 1 % stop $end
$var reg 32 & x [31:0] $end
$scope function golden_sqrt $end
$var reg 16 ' mask [15:0] $end
$var reg 16 ( temproot [15:0] $end
$var reg 32 ) xin [31:0] $end
$var integer 32 * i [31:0] $end
$upscope $end
$scope module psdsqrt_1 $end
$var wire 1 " clock $end
$var wire 1 # reset $end
$var wire 1 $ start $end
$var wire 1 % stop $end
$var wire 16 + testsqrt [15:0] $end
$var wire 32 , xin [31:0] $end
$var wire 32 - sqtestsqrt [31:0] $end
$var wire 16 . aux [15:0] $end
$var wire 32 / Q [31:0] $end
$var reg 16 0 leftD [15:0] $end
$var reg 16 1 rightD [15:0] $end
$var reg 16 2 rightQ [15:0] $end
$var reg 16 3 sqrt [15:0] $end
$var reg 16 4 tempsqrt [15:0] $end
$scope module init $end
$var wire 1 " CLK $end
$var wire 32 5 Din [31:0] $end
$var wire 1 $ en $end
$var wire 1 # reset $end
$var reg 32 6 Qout [31:0] $end
$upscope $end
$scope module out $end
$var wire 1 " CLK $end
$var wire 16 7 Din [15:0] $end
$var wire 1 % en $end
$var wire 1 # reset $end
$var reg 16 8 Qout [15:0] $end
$upscope $end
$upscope $end
$scope task execsqrt $end
$var reg 32 9 xin [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 9
bx 8
bx 7
bx 6
b0 5
bx 4
bx 3
bx 2
b0xxxxxxxxxxxxxxx 1
bx 0
bx /
bx .
bx -
b0 ,
bx +
bx *
bx )
bx (
bx '
b0 &
0%
0$
0#
0"
bx !
$end
#3
1#
#5
b0 !
b0 3
b0xxxxxxxxxxxxxx 1
b0 /
b0 6
b0 .
b0 8
b0xxxxxxxxxxxxxxx 2
1"
#10
0"
#15
b0xxxxxxxxxxxxx 1
b0xxxxxxxxxxxxxx 2
1"
#20
0"
#23
0#
#25
b0xxxxxxxxxxxx 1
b0xxxxxxxxxxxxx 2
1"
#30
0"
#35
b0xxxxxxxxxxx 1
b0xxxxxxxxxxxx 2
1"
#40
0"
#45
b0xxxxxxxxxx 1
b0xxxxxxxxxxx 2
1"
#50
0"
#55
b0xxxxxxxxx 1
b0xxxxxxxxxx 2
1"
#60
0"
#65
b0xxxxxxxx 1
b0xxxxxxxxx 2
1"
#70
0"
#75
b0xxxxxxx 1
b0xxxxxxxx 2
1"
#80
0"
#85
b0xxxxxx 1
b0xxxxxxx 2
1"
#90
0"
#95
b0xxxxx 1
b0xxxxxx 2
1"
#100
b1000000000000000 1
b0 0
1$
0"
b1000011000011 &
b1000011000011 ,
b1000011000011 5
b1000011000011 9
#105
b1000000000000000000000000000000 -
b1000000000000000 +
b1000011000011 /
b1000011000011 6
b1000000000000000 2
b0 4
b0 7
1"
#110
b100000000000000 1
0$
0"
#115
b10000000000000 1
b10000000000000000000000000000 -
b100000000000000 +
b100000000000000 2
1"
#120
0"
#125
b1000000000000 1
b100000000000000000000000000 -
b10000000000000 +
b10000000000000 2
1"
#130
0"
#135
b100000000000 1
b1000000000000000000000000 -
b1000000000000 +
b1000000000000 2
1"
#140
0"
#145
b10000000000 1
b10000000000000000000000 -
b100000000000 +
b100000000000 2
1"
#150
0"
#155
b1000000000 1
b100000000000000000000 -
b10000000000 +
b10000000000 2
1"
#160
0"
#165
b100000000 1
b1000000000000000000 -
b1000000000 +
b1000000000 2
1"
#170
0"
#175
b10000000 1
b10000000000000000 -
b100000000 +
b100000000 2
1"
#180
0"
#185
b1000000 1
b100000000000000 -
b10000000 +
b10000000 2
1"
#190
0"
#195
b100000 1
b1000000 0
b1000000000000 -
b1000000 +
b1000000 2
1"
#200
0"
#205
b10000 1
b10010000000000 -
b1100000 +
b100000 2
b1000000 4
b1000000 7
1"
#210
0"
#215
b1000 1
b1100100000000 -
b1010000 +
b10000 2
1"
#220
0"
#225
b100 1
b1010001000000 -
b1001000 +
b1000 2
1"
#230
0"
#235
b10 1
b1001000010000 -
b1000100 +
b100 2
1"
#240
0"
#245
b1 1
b1000100000100 -
b1000010 +
b10 2
1"
#250
0"
#255
b0 1
b1000001 0
b1000010000001 -
b1000001 +
b1 2
1"
#260
0"
#265
b0 2
b1000001 4
b1000001 7
1"
#270
1%
0"
#275
b1000001 !
b1000001 3
b1000001 .
b1000001 8
1"
#280
0%
0"
#285
1"
#290
b10000 *
b1000001 (
b0 '
b1000011000011 )
0"
#295
1"
#300
0"
#305
1"
#310
0"
#315
1"
#320
0"
#325
1"
#330
0"
#335
1"
#340
0"
#345
1"
#350
0"
#355
1"
#360
0"
#365
1"
#370
0"
#375
1"
#380
0"
#385
1"
