$date
	Fri Apr 29 15:32:13 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module psdsqrt_tb $end
$var wire 16 ! sqrt [15:0] $end
$var reg 1 " clock $end
$var reg 1 # reset $end
$var reg 1 $ start $end
$var reg 1 % stop $end
$var reg 32 & x [31:0] $end
$scope function golden_sqrt $end
$var reg 16 ' mask [15:0] $end
$var reg 16 ( temproot [15:0] $end
$var reg 32 ) xin [31:0] $end
$var integer 32 * i [31:0] $end
$upscope $end
$scope module psdsqrt_1 $end
$var wire 1 " clock $end
$var wire 1 # reset $end
$var wire 1 $ start $end
$var wire 1 % stop $end
$var wire 32 + xin [31:0] $end
$var wire 32 , auxQ [31:0] $end
$var wire 16 - aux [15:0] $end
$var reg 32 . Q [31:0] $end
$var reg 16 / leftD [15:0] $end
$var reg 16 0 rightD [15:0] $end
$var reg 16 1 rightQ [15:0] $end
$var reg 16 2 sqrt [15:0] $end
$var reg 32 3 sqtestsqrt [31:0] $end
$var reg 16 4 tempsqrt [15:0] $end
$var reg 16 5 testsqrt [15:0] $end
$scope module init $end
$var wire 1 " CLK $end
$var wire 32 6 Din [31:0] $end
$var wire 1 $ en $end
$var wire 1 # reset $end
$var reg 32 7 Qout [31:0] $end
$upscope $end
$scope module out $end
$var wire 1 " CLK $end
$var wire 16 8 Din [15:0] $end
$var wire 1 % en $end
$var wire 1 # reset $end
$var reg 16 9 Qout [15:0] $end
$upscope $end
$upscope $end
$scope task execsqrt $end
$var reg 32 : xin [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx :
bx 9
bx 8
bx 7
b0 6
bx 5
bx 4
bx 3
bx 2
bx 1
b0xxxxxxxxxxxxxxx 0
bx /
bx .
bx -
bx ,
b0 +
bx *
bx )
bx (
bx '
b0 &
0%
0$
0#
0"
bx !
$end
#3
1#
#5
b0 5
b0 0
b0 /
b0 ,
b0 7
b0 -
b0 9
b0 1
b0 4
b0 8
b0 !
b0 2
b0 .
1"
#10
0"
#15
1"
#20
0"
#23
0#
#25
1"
#30
0"
#35
1"
#40
0"
#45
1"
#50
0"
#55
1"
#60
0"
#65
1"
#70
0"
#75
1"
#80
0"
#85
1"
#90
0"
#95
1"
#100
b1000000000000000 0
b0 3
1$
0"
b11001 &
b11001 +
b11001 6
b11001 :
#105
b1000000000000000 5
b11001 ,
b11001 7
b1000000000000000 1
1"
#110
b100000000000000 0
b11001 .
b1000000000000000000000000000000 3
0$
0"
#115
b100000000000000 5
b10000000000000 0
b100000000000000 1
1"
#120
0"
#125
b10000000000000 5
b1000000000000 0
b10000000000000000000000000000 3
b10000000000000 1
1"
#130
0"
#135
b1000000000000 5
b100000000000 0
b100000000000000000000000000 3
b1000000000000 1
1"
#140
0"
#145
b100000000000 5
b10000000000 0
b1000000000000000000000000 3
b100000000000 1
1"
#150
0"
#155
b10000000000 5
b1000000000 0
b10000000000000000000000 3
b10000000000 1
1"
#160
0"
#165
b1000000000 5
b100000000 0
b100000000000000000000 3
b1000000000 1
1"
#170
0"
#175
b100000000 5
b10000000 0
b1000000000000000000 3
b100000000 1
1"
#180
0"
#185
b10000000 5
b1000000 0
b10000000000000000 3
b10000000 1
1"
#190
0"
#195
b1000000 5
b100000 0
b100000000000000 3
b1000000 1
1"
#200
0"
#205
b100000 5
b10000 0
b1000000000000 3
b100000 1
1"
#210
0"
#215
b10000 5
b1000 0
b10000000000 3
b10000 1
1"
#220
0"
#225
b1000 5
b100 0
b100000000 3
b1000 1
1"
#230
0"
#235
b100 5
b10 0
b1000000 3
b100 1
1"
#240
0"
#245
b10 5
b1 0
b100 /
b10000 3
b10 1
1"
#250
0"
#255
b101 5
b0 0
b10 /
b100 3
b1 1
b100 4
b100 8
1"
#260
0"
#265
b10 5
b101 /
b11001 3
b0 1
b10 4
b10 8
1"
#270
1%
0"
#275
b10 !
b10 2
b101 5
b10 /
b100 3
b101 4
b101 8
b10 -
b10 9
1"
#280
0%
0"
#285
b10 5
b101 /
b11001 3
b10 4
b10 8
1"
#290
b10000 *
b101 (
b0 '
b11001 )
0"
#295
b101 5
b10 /
b100 3
b101 4
b101 8
1"
#300
0"
#305
b10 5
b101 /
b11001 3
b10 4
b10 8
1"
#310
0"
#315
b101 5
b10 /
b100 3
b101 4
b101 8
1"
#320
0"
#325
b10 5
b101 /
b11001 3
b10 4
b10 8
1"
#330
0"
#335
b101 5
b10 /
b100 3
b101 4
b101 8
1"
#340
0"
#345
b10 5
b101 /
b11001 3
b10 4
b10 8
1"
#350
0"
#355
b101 5
b10 /
b100 3
b101 4
b101 8
1"
#360
0"
#365
b10 5
b101 /
b11001 3
b10 4
b10 8
1"
#370
0"
#375
b101 5
b10 /
b100 3
b101 4
b101 8
1"
#380
0"
#385
b10 5
b101 /
b11001 3
b10 4
b10 8
1"
#390
